Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName Microsoft.VisualBasic

# Create Open Folder Dialog
$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog
$FolderBrowser.Description = "Select the Parent Directory"
$null = $FolderBrowser.ShowDialog()
$ParentDirectory = $FolderBrowser.SelectedPath

if (-not $ParentDirectory) {
    Write-Output "No directory selected. Exiting."
    exit
}

# Create Input Box for Table Class
$TableClass = [Microsoft.VisualBasic.Interaction]::InputBox("Enter the table class to check:", "Table Class", "target-table")

if (-not $TableClass) {
    Write-Output "No table class entered. Exiting."
    exit
}

# Get all subdirectories
$Folders = Get-ChildItem -Path $ParentDirectory -Directory

foreach ($Folder in $Folders) {
    $FilePath = Join-Path -Path $Folder.FullName -ChildPath "index.html"
    
    if (Test-Path $FilePath) {
        $HtmlContent = Get-Content -Path $FilePath -Raw
        
        # Check if the table with the given class has any rows
        if ($HtmlContent -match "<table[^>]*class=\"$TableClass\"[^>]*>.*?<\/table>") {
            if ($HtmlContent -notmatch "<table[^>]*class=\"$TableClass\"[^>]*>.*?<tr.*?>.*?<\/tr>.*?<\/table>") {
                Write-Output "Deleting folder: $($Folder.FullName) (Empty table found)"
                Remove-Item -Path $Folder.FullName -Recurse -Force
            } else {
                Write-Output "Skipping folder: $($Folder.FullName) (Table contains rows)"
            }
        } else {
            Write-Output "Skipping folder: $($Folder.FullName) (Table not found)"
        }
    } else {
        Write-Output "Skipping folder: $($Folder.FullName) (index.html not found)"
    }
}
